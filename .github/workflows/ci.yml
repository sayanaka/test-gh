name: CI

on:
  pull_request:
    types: closed
    branches: master

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // マージされていない場合は何もしない
            if (!context.payload.pull_request.merged) {
                return
            }

            const settings = {
                web: { title: `prod web #${context.payload.number}`, head: `master`, base: `deploy_web`, note: `web` },
                client: { title: `prod client #${context.payload.number}`, head: `master`, base: `deploy_client`, note: `client` },
                test: { title: `これは落ちます`, head: `master`, base: `deploy_client`, note: `落ちるやつ` }
            }

            // PR作成（web）
            createPR(settings.web)

            // PR作成（client）
            createPR(settings.client)

            // これは絶対落ちるやつ（ブランチが存在しない）
            createPR(settings.test)

            const createPR = (setting) => {
                // PR作成
                github.pulls.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: setting.title,
                    head: setting.head,
                    base: setting.base,
                    body: setting.title,
                }).then(result => {
                    console.log(`PR(${setting.note}) : 作成完了`)
                }).catch(e => {
                    e.errors.map(t => {
                        if (t.message !== undefined && t.message.includes(`A pull request already exists`)) {
                            // 同等のPRが存在している場合は、元PRにコメントする
                            createPRComment(setting)
                        } else {
                            console.log(`下記のエラーが発生したため、PR(${setting.note})作成を中止しました。`)
                            console.log(e.message)
                        }
                    })
                })
            }

            const createPRComment = (setting) => {

                github.search.issuesAndPullRequests({
                    q: `is:pr is:open head:${setting.head} base:${setting.base}`
                }).then(result => {
                    console.log(`=> 検索結果`)
                    console.log(result.data.items)

                    console.log(`=> 検索結果 １件目`)
                    console.log(result.data.items[0])
                })



                // github.issues.createComment({
                //     owner: context.repo.owner,
                //     repo: context.repo.repo,
                //     issue_number: context.payload.number,
                //     body: `同じものが存在していたよ`,
                // })
                // console.log("=> context")
                // console.log(context)
                console.log(`同じのが存在してました`)
            }
